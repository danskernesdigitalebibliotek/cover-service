openapi: 3.0.0
info:
  title: 'DDB Cover Service'
  description: >-
    This service provides covers for library materials indexed by isbn, issn, faust, pid.
    The service is provided by [Danskernes Digitale Bibliotek](https://www.danskernesdigitalebibliotek.dk/)

    ### Authentication notes

    Authentication is done via OAuth2 against auth.dbc.dk. To obtain a valid token follow instructions in
    [1.2. Password Grant](https://github.com/DBCDK/hejmdal/blob/oAuth2/src/oAuth2/README.md#12-password-grant).
    To use the "Authorize" option in this tool use your 'client_id' and 'client_secret' and fill in '@' for
    both username and password.

    ### Implementation notes

    Currently the API is not fully implemented. The following features are missing:

    * Generic Covers: parameter is currently ignored. Service doesn't yet provide generic covers.

    * Image sizes: parameter is currently ignored. All available sizes are returned.

    * Pagination: not implemented.

    * Oauth: not implemented.

  version: '2.0.0'
  license:
    name: 'GNU Affero General Public License'
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
paths:
  '/api/cover/{type}':
    get:
      tags: [Cover]
      summary: Search covers
      description: >-
        # Search multiple covers

        Get covers by ID in specific image format(s), specific image size(s) and with or without generic covers.

        The results can be paginated by specifiying an offset and a page limit. The response will contain a "Link" HTTP header according to RFC5988 pointing to previous and/or next page of results.
        (Note: pagination not yet implemented)
      security:
        - OAuth2: [read]
      parameters:
        - name: type
          description: >-
            # ID type

            The type of the ID, i.e. "isbn", "faust", "pid" or "issn".
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/Type'
        - name: id
          description: >-
            # ID

            A list of IDs.
          required: true
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Id'
          style: form
          explode: false
          example:
            - '870970-basis:26957087'
            - '870970-basis:53969127'
        - name: generic
          description: >-
            # Generic covers

            If we should include generic front page covers or not for resources without a cover.
          required: false
          in: query
          schema:
            type: boolean
            default: true
        - name: size
          description: >-
            # Image sizes

            A list of image sizes (Cloudinary transformations) for the cover(s) you want to receive.
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - default
                - original
            default:
              - default
              - original
          style: form
          explode: false
        - name: limit
          description: >-
            # Pagination page limit

            Number of covers per page for paginated results.
          required: false
          in: query
          schema:
            type: integer
            minimum: 1
        - name: offset
          description: >-
            # Pagination page offset

            Offset for paginated results.
          required: false
          in: query
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        200:
          description: >-
            # Successful

            A list of covers is returned.

            Notice that unknown covers will not be present in the list.

            Notice that "worst case" you will receive a 200 OK with an empty list.
          headers:
            Link:
              description: RFC5988 Link HTTP header pointing to "next" and "previous" pages
              required: false
              schema:
                type: string
            X-Total-Count:
              description: Total number of covers
              required: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverCollection'
        401:
          description: >-
            # Unauthorized

            Credentials are required for this operation.
        403:
          description: >-
            # Forbidden

            The credentials used does are not authorized for this operation.
        default:
          description: Undefined error

  '/api/cover/{type}/{id}':
    get:
      tags: [Cover]
      summary: Get cover
      description: >-
        # Get one cover

        Get one cover by type and ID in specific image format(s), specific image size(s) and with or without generic covers.
      security:
        - OAuth2: [read]
      parameters:
        - name: type
          description: >-
            # ID type

            The type of the ID, i.e. "isbn", "faust", "pid", "issn", or "issn-vol-nr".
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/Type'
        - name: id
          description: >-
            # ID

            The ID of the cover.
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/Id'
        - name: format
          description: >-
            # Formats

            A list of image formats you want to receive the cover(s) in.
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - jpeg
                - png
            default:
              - jpeg
              - png
          style: form
          explode: false
        - name: generic
          description: >-
            # Generic covers

            If we should include generic front page covers or not for ressources without a cover.
          required: false
          in: query
          schema:
            type: boolean
            default: true
        - name: size
          description: >-
            # Image sizes

            A list if image sizes (Cloudinary transformations) for the cover(s) you want to receive.
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - default
                - original
                - thumbnail
            default:
              - default
              - original
              - thumbnail
          style: form
          explode: false
      responses:
        200:
          description: >-
            # Successful

            A list of covers is returned.

            Notice that unknown covers will not be present in the list.

            Notice that "worst case" you will receive a 200 OK with an empty list.
          headers:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cover'
        401:
          description: >-
            # Unauthorized

            Credentials are required for this operation.
        403:
          description: >-
            # Forbidden

            The credentials used does are not authorized for this operation.
        404:
          description: >-
            # Not found

            A cover for the type / ID could not be found.
        default:
          description: Undefined error

components:
  schemas:
    Type:
      description: >-
        The type of the ID, i.e. "isbn", "faust", "pid", "issn", or "issn-vol-nr".

        **Notice:** A cover can be known under more than one type/ID.
      type: string
      enum:
        - 'faust'
        - 'isbn'
        - 'issn'
        - 'pid'
      example: 'pid'
    Id:
      description: >-
        An identifier URI of the given type ("isbn", "faust", "pid", "issn",  or "issn-vol-nr").

        **Notice:** A cover can be known under more than one type/ID.
      type: string
      example: '870970-basis:26957087'
    CoverCollection:
      type: array
      items:
        $ref: '#/components/schemas/Cover'
    Cover:
      type: object
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/Type'
        id:
          $ref: '#/components/schemas/Id'
        imageUrls:
          type: array
          description: A list of the all images (the formats and sizes matching the request) for the cover. Only used on GET.
          readOnly: true
          items:
            type: object
            required:
              - url
              - format
              - size
            properties:
              url:
                type: string
                format: url
                description: The URL to the image on Cloudinary
                example: http://res.cloudinary.com/dandigbib/image/upload/t_ddb_cover/v1543609481/bogportalen.dk/9788702246841.jpg
              format:
                type: string
                description: The image format
                example: jpeg
              size:
                type: string
                description: The name of the image size
                example: thumbnail
  securitySchemes:
    OAuth2:
      type: oauth2
      description: >-
        Authentication is done via OAuth2 against auth.dbc.dk. To obtain a valid token follow instructions in
        [1.2. Password Grant](https://github.com/DBCDK/hejmdal/blob/oAuth2/src/oAuth2/README.md#12-password-grant)
      flows:
        password:
          tokenUrl: 'https://auth.dbc.dk/oauth/token'
          scopes: {}
